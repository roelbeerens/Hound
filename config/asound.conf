pcm.!default {
    type plug
    slave.pcm highpass;
    ttable.0.0 1
    ttable.1.0 1
    ttable.0.1 0.5
    ttable.1.1 0.5
}
ctl.!default {
    type hw card 0
}
ctl.equal {
    type equal;
}
# Simple high pass filter
# the value is stupid high for testing purposes, so
# remember to change the control value to something reasonable.
# on my pc, I have it set at 60 (which is 60 Hz)
pcm.highpass {
    type ladspa
    slave.pcm lowpass;
    path "/usr/lib/ladspa";
    channels 2
    plugins {
        0 {
            label hpf
            policy none
            input.bindings.0 "Input";
            output.bindings.0 "Output";
            input {
                controls [ 4000 4 ]
            }
        }
        1 {
            label hpf
            policy none
            input.bindings.1 "Input";
            output.bindings.1 "Output";
            input {
                controls [ 4000 4 ]
            }
        }
    }
}

# Simple Low pass filter
# this one only attentuates sounds above the higher range
# of human hearing (2,500 Hz, thus, control value is 2500)
pcm.lowpass {
    type ladspa
    slave.pcm plugequal;
    path "/usr/lib/ladspa";
    channels 2
    plugins {
        0 {
            label lpf
            policy none
            input.bindings.0 "Input";
            output.bindings.0 "Output";
            input {
                controls [ 2500 4 ]
            }
        }
        1 {
            label lpf
            policy none
            input.bindings.1 "Input";
            output.bindings.1 "Output";
            input {
                controls [ 2500 4 ]
            }
        }
    }
}
pcm.plugequal {
    type equal;
    slave.pcm "plughw:0,0";
}
pcm.equal {
    type plug;
    slave.pcm plugequal;
}